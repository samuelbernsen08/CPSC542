# -*- coding: utf-8 -*-
"""Assignment1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ae6PHJfEwCvDakVoCnmY-hwaE9JVVHHf
"""

import warnings
warnings.filterwarnings('ignore')

import numpy as np
import pandas as pd
import PIL

import tensorflow.keras as kb
from tensorflow.keras import backend
import tensorflow as tf
from sklearn.preprocessing import LabelBinarizer
from tensorflow.keras.layers import Dense
from tensorflow.keras.layers.experimental import preprocessing

from tensorflow.keras.utils import load_img
from tensorflow.keras.utils import img_to_array
from keras.applications.imagenet_utils import decode_predictions
import matplotlib.pyplot as plt

import model_creator
import image_tester
import training_plot
    
tf.random.set_seed(130)

image_height = 224
image_width = 224

def run(condition):
    if condition:
        num_epochs = int(input("How many epochs? "))

        history = model_creator.model_creator(image_height=image_height, image_width=image_width, epochs = num_epochs)

        training_plot.plot(history, num_epochs) # plotting out the training process and associated performance metrics



    """Testing on specific images"""
    path = "./WaterBodiesDataset/Images/water_body_70.jpg"
    loaded_model = tf.keras.models.load_model("./model_directory")
    image_tester.get_new_segmentation_map(loaded_model, path, image_height, image_width)


    